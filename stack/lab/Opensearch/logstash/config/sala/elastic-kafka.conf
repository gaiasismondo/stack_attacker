input {
  elasticsearch{
    hosts =>"opensearch-node1"
    ca_file => "/usr/share/logstash/config/ca.crt"
    ssl => true
    docinfo => true
    password => "admin"
    user => "admin"
    index => "tivoli-mosquittoscript-*"
    schedule => "* * * * *"
    query =>'{
        "query": {
            "bool": {
            "must": [
                {
                "match": {
                    "data_model.fields.content": {
                    "query": "(all topics)",
                    "operator": "and"
                    }
                }
                },
                {
                "match": {
                    "data_model.fields.protocol": {
                    "query": "mqtt"
                    }
                }
                }
            ]
            }
        }
    }'
  }

  elasticsearch{
    hosts =>"opensearch-node1"
    ca_file => "/usr/share/logstash/config/ca.crt"
    ssl => true
    docinfo => true
    password => "admin"
    user => "admin"
    index => "tivoli-auditbeat-*"
    schedule => "* * * * *"
    query =>'{
        "query": {
            "bool": {
            "must": [
                {
                "match": {
                    "service.type": {
                    "query": "file_integrity",
                    "operator": "and"
                    }
                }
                },
                {
                "match": {
                    "data_model.fields.file_path": {
                    "query": "/etc/mosquitto/mosquitto.conf",
                    "operator": "and"
                    }
                }
                }
            ]
            }
        }
    }'
  }

  elasticsearch{
    hosts =>"opensearch-node1"
    ca_file => "/usr/share/logstash/config/ca.crt"
    ssl => true
    docinfo => true
    password => "admin"
    user => "admin"
    index => "tivoli-mosquittoscript-*"
    schedule => "* * * * *"
    query =>'{
        "size": 0, 
        "query": {
            "bool": {
            "must": [
                {
                "match": {
                    "data_model.fields.protocol": "mqtt"
                }
                }
            ]
            }
        }
    }'
  }

  elasticsearch{
    hosts =>"opensearch-node1"
    ca_file => "/usr/share/logstash/config/ca.crt"
    ssl => true
    docinfo => true
    password => "admin"
    user => "admin"
    index => "tivoli-mosquittoscript-*"
    schedule => "* * * * *"
    query =>'{
        "size": 0, 
        "query": {
            "bool": {
            "must": [
                {
                "match": {
                    "data_model.fields.protocol": "mqtt"
                }
                }
            ],
            "filter": [
                {
                    "range": {
                    "@timestamp": {
                        "gte": "now-1m/m",
                        "lt": "now/m"
                    }
                    }
                }
            ]
            }
        }
    }'
  }

  elasticsearch{
    hosts =>"opensearch-node1"
    ca_file => "/usr/share/logstash/config/ca.crt"
    ecs_compatibility => "disabled"
    ssl => true
    docinfo => true
    password => "admin"
    user => "admin"
    index => "tivoli-mosquittoscript-*"
    schedule => "* * * * *"
    query =>'{
        "query": {
            "bool": {
            "must": [
                {
                "match": {
                    "data_model.fields.protocol": "mqtt"
                }
                },
                {
                "match": {
                    "data_model.fields.content": {
                    "query": "(not allowed)",
                    "operator": "and"
                    }
                }
                }
            ]
            }
        }
    }'
  }



}

output {
 kafka {
     #        a quale broker inoltrare
             bootstrap_servers => "brokerdc:9092"
             # codifica json - sono possibili altre codifiche (es. rubydebug)
             codec => json
             # topic su cui scrivere
             topic_id => "evidences"
     }
}

